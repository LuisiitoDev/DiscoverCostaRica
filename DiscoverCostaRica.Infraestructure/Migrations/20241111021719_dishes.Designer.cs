// <auto-generated />
using DiscoverCostaRica.Infraestructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscoverCostaRica.Infraestructure.Migrations
{
    [DbContext(typeof(DiscoverCostaRicaContext))]
    [Migration("20241111021719_dishes")]
    partial class dishes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.2.24474.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Beach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Beach", (string)null);
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.Canton", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("ProvinceId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Canton", (string)null);
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short?>("CantonId")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CantonId");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.Province", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province", (string)null);
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.ProvinceDetail", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("History")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Map")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ProvinceId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId")
                        .IsUnique();

                    b.ToTable("ProvinceDetail", (string)null);
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dish", (string)null);
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.Canton", b =>
                {
                    b.HasOne("DiscoverCostaRica.Domain.Entities.Direction.Province", null)
                        .WithMany("Cantons")
                        .HasForeignKey("ProvinceId");
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.District", b =>
                {
                    b.HasOne("DiscoverCostaRica.Domain.Entities.Direction.Canton", null)
                        .WithMany("Districts")
                        .HasForeignKey("CantonId");
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.ProvinceDetail", b =>
                {
                    b.HasOne("DiscoverCostaRica.Domain.Entities.Direction.Province", "Province")
                        .WithOne("ProvinceDetail")
                        .HasForeignKey("DiscoverCostaRica.Domain.Entities.Direction.ProvinceDetail", "ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.Canton", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("DiscoverCostaRica.Domain.Entities.Direction.Province", b =>
                {
                    b.Navigation("Cantons");

                    b.Navigation("ProvinceDetail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
